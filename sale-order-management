import React from 'react';
import { useQuery } from '@tanstack/react-query';
import styles from './ActiveOrdersTable.module.css';

const fetchActiveOrders = async () => {
  const response = await fetch('https://jsonplaceholder.typicode.com/users');

 
  
  // Check if the response is JSON
  const contentType = response.headers.get('content-type');
  if (contentType && contentType.includes('application/json')) {
    return response.json();
  } else {
    // Log unexpected response for debugging
    const text = await response.text();
    console.error('Unexpected response:', text);
    throw new Error(`Unexpected response: ${text}`);
  }
};

function ActiveOrdersTable() {
  const { data, error, isLoading } = useQuery({
    queryKey: ['activeOrders'],
    queryFn: fetchActiveOrders
  });

  if (isLoading) return 'Loading...';
  if (error) return <div>An error occurred: {error.message}</div>;

  // Guard clause to handle undefined data
  if (!data || !data.length) {
    return <div>No active orders available</div>;
  }

  return (
    <div className={styles['table-container']}>
      <button>+ Sale Order</button>
      <button>Active Sale Orders</button>
      <button>Completed Sale Orders</button>
      <table>
        <thead>
          <tr>
            <th>ID</th>
            <th>Customer</th>
            <th>Price (â‚¹)</th>
            <th>Last Modified</th>
            <th>Edit/View</th>
          </tr>
        </thead>
        <tbody>
          {/* {data.map(order => ( */}
            <tr >
              <td>{1}</td>
              <td>{"paramesh"}</td>
              <td>{100}</td>
              <td>{"2-5-2024"}</td>
              <td><button>...</button></td>
            </tr>
           <tr>
             <td>{2}</td>
              <td>{"vikky"}</td>
              <td>{200}</td>
              <td>{"2-6-2024"}</td>
              <td><button>...</button></td>
           </tr>
           <tr>
             <td>{3}</td>
              <td>{"ramana"}</td>
              <td>{300}</td>
              <td>{"2-7-2024"}</td>
              <td><button>...</button></td>
           </tr>
          {/* ))} */}
        </tbody>
      </table>
    </div>
  );
}

export default ActiveOrdersTable;

.table-container {
    margin: 20px;
  }
  
  button {
    margin: 5px;
    padding: 10px;
    background-color: #007bff;
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }
  
  button:hover {
    background-color: #0056b3;
  }
  
  table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 10px;
  }
  
  th, td {
    border: 1px solid #ddd;
    padding: 8px;
  }
  
  th {
    background-color: #f2f2f2;
    text-align: left;
  }
  
  tr:nth-child(even) {
    background-color: #f9f9f9;
  }
  
  tr:hover {
    background-color: #ddd;
  }


import React from 'react';
import { useQuery } from '@tanstack/react-query';

const fetchCompletedOrders = async () => {
  const response = await fetch('/api/completed-orders....');
  return response.json();
};

function CompletedOrdersTable() {
  const { data, error, isLoading } = useQuery({
    queryKey: ['completedOrders'],
    queryFn: fetchCompletedOrders
  });

  if (isLoading) return 'Loading...';
  if (error) return 'An error occurred: ' + error.message;

  return (
    <table>
      <thead>
        <tr>
          <th>Order ID</th>
          <th>Customer</th>
          <th>Price</th>
          <th>Last Modified</th>
        </tr>
      </thead>
      <tbody>
        {data.map(order => (
          <tr key={order.id}>
            <td>{order.id}</td>
            <td>{order.customer}</td>
            <td>{order.price}</td>
            <td>{order.lastModified}</td>
          </tr>
        ))}
      </tbody>
    </table>
  );
}

export default CompletedOrdersTable;


import React, { useState } from 'react';

function EditOrderForm({ order }) {
  const [formState, setFormState] = useState(order);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormState({
      ...formState,
      [name]: value
    });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    // Submit the form
  };

  return (
    <form onSubmit={handleSubmit}>
      <label>
        Customer:
        <input
          type="text"
          name="customer"
          value={formState.customer}
          onChange={handleChange}
        />
      </label>
      <label>
        Price:
        <input
          type="text"
          name="price"
          value={formState.price}
          onChange={handleChange}
        />
      </label>
      <button type="submit">Save</button>
    </form>
  );
}

export default EditOrderForm;


import React from 'react';
import ActiveOrdersTable from './ActiveOrdersTable';
import ProductMultiSelect from './ProductMultiSelect';

const App = () => {
  const exampleProducts = [
    { id: 1, name: 'Product 1' },
    { id: 2, name: 'Product 2' },
    { id: 3, name: 'Product 3' },
  ];

  return (
    <div>
      <ActiveOrdersTable />
      <ProductMultiSelect products={exampleProducts} />
    </div>
  );
};

export default App;


import React, { useState } from 'react';
import styles from './ProductMultiSelect.module.css';

const ProductMultiSelect = ({ products }) => {
  const [selectedProducts, setSelectedProducts] = useState([]);
  const [productDetails, setProductDetails] = useState({});

  const handleSelectProduct = (productId) => {
    setSelectedProducts(prev =>
      prev.includes(productId)
        ? prev.filter(id => id !== productId)
        : [...prev, productId]
    );
  };

  const handleInputChange = (productId, field, value) => {
    setProductDetails(prev => ({
      ...prev,
      [productId]: {
        ...prev[productId],
        [field]: value
      }
    }));
  };

  return (
    <div className={styles.container}>
      <input type="text" placeholder="All Products" list="products-list" />
      <datalist id="products-list">
        {products.map(product => (
          <option key={product.id} value={product.name} />
        ))}
      </datalist>
      <div className={styles['product-details']}>
        {selectedProducts.map(productId => (
          <div key={productId}>
            <h3>{products.find(p => p.id === productId).name}</h3>
            <label>
              Selling Rate:
              <input
                type="text"
                value={productDetails[productId]?.rate || ''}
                onChange={(e) => handleInputChange(productId, 'rate', e.target.value)}
              />
            </label>
            <label>
              Enter Quantity:
              <input
                type="text"
                value={productDetails[productId]?.quantity || ''}
                onChange={(e) => handleInputChange(productId, 'quantity', e.target.value)}
              />
            </label>
            <p>{productDetails[productId]?.quantity} items remaining</p>
          </div>
        ))}
      </div>
    </div>
  );
};

export default ProductMultiSelect;
.container {
    margin: 20px;
  }
  
  input[type="text"] {
    width: 100%;
    padding: 10px;
    margin: 5px 0;
    box-sizing: border-box;
    border: 2px solid #ccc;
    border-radius: 4px;
  }
  
  .product-details {
    margin-top: 10px;
  }
  
  .product-details h3 {
    margin: 0;
    padding: 10px;
    background-color: #f2f2f2;
    border: 1px solid #ccc;
    border-radius: 4px;
  }
  
  .product-details label {
    display: block;
    margin: 10px 0;
  }
  
  .product-details input[type="text"] {
    width: calc(100% - 22px);
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
  }
  
  .product-details p {
    color: green;
    font-weight: bold;
  }


import React from 'react';
import ActiveOrdersTable from './Components/ActiveOrdersTable';
import CompletedOrdersTable from './Components/CompletedOrdersTable';
import EditOrderForm from './Components/EditOrderForm';
import ProductMultiSelect from './Components/ProductMultiSelect';


const App = () => {
  // Example data for edit form and product multi-select
  const exampleOrder = [
    { id: 1, customer: 'Customer 1', price: 100 },
    { id: 2, customer: 'Customer 2', price: 100 },
    { id: 3, customer: 'Customer 3', price: 100 },
    { id: 4, customer: 'Customer 4', price: 100 },
    

  ];
  const exampleProducts = [
    { id: 1, name: 'Product 1' },
    { id: 2, name: 'Product 2' },
    { id: 3, name: 'Product 3' },
    { id: 4, name: 'Product 4' },
    { id: 5, name: 'Product 5' },
    { id: 6, name: 'Product 6' },
    
  ];

  return (
    <div>
      <ActiveOrdersTable />
      <EditOrderForm order={exampleOrder} />
      <CompletedOrdersTable />
      <ProductMultiSelect products={exampleProducts} />
    </div>
  );
};

export default App;


import React from 'react';
import ReactDOM from 'react-dom';
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import App from './App';

const queryClient = new QueryClient();

ReactDOM.render(
  <QueryClientProvider client={queryClient}>
    <App />
  </QueryClientProvider>,
  document.getElementById('root')
);





